@{
    ViewData["Title"] = "Home Page";
}

@model ChildrenHospinal.ViewModels.DoctorListViewModel

<div id="filterBar" class="sidenav">
    @using (Html.BeginForm("Index", "Doctors"))
    {
        <div class="cd-filter-block">
            @Html.LabelFor(m => m.Filter.Speciality, "Специальность")
            @Html.DropDownListFor(m => m.Filter.Speciality, new SelectList(Model.Specialities, "SpecialityId", "Name"),
                                                                        "Выберете специальность",
                                                                        new { @class = "form-control" , id = "speciality" })
            @Html.ValidationMessageFor(m => m.Filter.Speciality)
        </div>

        <div class="cd-filter-block">
            @Html.LabelFor(m => m.Filter.Degree, "Звание")
            @Html.DropDownListFor(m => m.Filter.Degree, new SelectList(Model.Degree),
                                                                    "Выберете звание",
                                                                    new { @class = "form-control", id = "degree" })
            @Html.ValidationMessageFor(m => m.Filter.Degree)
        </div>

        <span>
            <button class="btn btn-link btn-sm" id="discard" style="margin-top:10px">Сбросить</button>
        </span>
        <button type="submit" class="btn btn-primary" style="background-color: #006400;margin-top:10px">Отфильтровать</button>
    }

</div>
<div id="main">

    <h2 style="text-align:center">Доктора</h2>

    <span style="font-size:30px;cursor:pointer" id="open">&#9776; Фильтр</span>

    @using (Html.BeginForm("Search", "Doctors"))
    {
        <div class="form-group">
            <div id="searchFlights" class="input-group" style="width:300px">
                @Html.TextBoxFor(m => m.SearchTerm, new { @class = "form-control", placeholder = Model.SearchTerm != null ? Model.SearchTerm : "Поиск по имени" })
                <span class="input-group-addon">
                    <i class="glyphicon glyphicon-search"></i>
                </span>
            </div>
        </div>
    }

    <p>
        <a style="margin-left:450px" asp-action="Create"><i class="glyphicon glyphicon-plus-sign plus"></i></a>
    </p>

    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Номер", "Index", new { sortOrder = ViewBag.IdSortParm }, new { @class = "link", style = "color: white" })
                    <i class="fa fa-fw fa-sort"></i>
                </th>
                <th style="width:100px">
                    @Html.ActionLink("Имя", "Index", new { sortOrder = ViewBag.NameSortParm }, new { style = "color: white;" })
                    <i class="fa fa-fw fa-sort"></i>
                </th>
                <th>
                    Телефон
                </th>
                <th style="width:100px">
                    @Html.ActionLink("Звание", "Index", new { sortOrder = ViewBag.DegreeSortParm }, new { style = "color: white;" })
                    <i class="fa fa-fw fa-sort"></i>
                </th>
                <th>
                    Специальность
                </th>
                <th>
                    Удалить
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Doctors)
            {
                <tr>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.DoctorId">@Html.DisplayFor(modelItem => item.DoctorId)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Degree)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.srt);
                    </td>
                    <td>
                        <a class="js-delete-doctor glyphicon glyphicon-remove" data-doctor-id="@item.DoctorId" data-doctor-name="@item.FullName"></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

    @section scripts{
        <script>

            $(document).ready(function () {
            
                $(".js-delete-doctor").on("click", function (e) {
                    var link = $(e.target);
                    var str = "Вы уверенны, что хотите удалить данного доктора" + " [ " + link.attr('data-doctor-id') + " " + link.attr('data-doctor-name') +"]" ;
                    bootbox.dialog({
                        title: "Подтвердите",
                        message: "<p>" + str + "</p>",
                        size: 'large',
                        buttons: {
                            no: {
                                label: "No",
                                className: 'btn-primary',
                                callback: function () {
                                    bootbox.hideAll();
                                }
                            },
                            yes: {
                                label: "Yes",
                                className: 'btn-primary',
                                callback: function () {
                                    $.ajax({
                                        url: `/api/doctors?doctorId=${link.attr('data-doctor-id')}`,
                                        method: "POST"
                                    })
                                        .done(function () {
                                            bootbox.hideAll();
                                            link.parents("tr").fadeOut(function () {
                                                $(this).remove();
                                            });
                                        })
                                        .fail(function () {
                                              bootbox.hideAll();
                                              alert("Доктор не может быть удален. За ним закреплены пациенты или приемы в р");
                                        })
                                  
                                },
                            },
                        }
                    });
                });
            });

            $('#open').on('click', function () {
                if ($('#filterBar').css("width") == '0px') {
                    $('#filterBar').attr('style', 'width:300px');
                    $('#main').attr('style', 'margin-left:300px');
                } else {
                    $('#filterBar').attr('style', 'width:0px');
                    $('#main').attr('style', 'margin-left:0px');
                }
            });

            
            $('#discard').on('click', function () {
                $("#speciality").val("");
                $("#degree").val("");
            });
        </script>
    }
